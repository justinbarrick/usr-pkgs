secrets = [
    "S3_ACCESS_KEY",
    "S3_SECRET_KEY",
    "DOCKER_USER",
    "DOCKER_PASS",
    "GITHUB_TOKEN"
]

env = [
    "POLYBAR_VERSION=3.3.0-1",
    "POLYBAR_PATH=polybar/polybar-3.3.0-1-x86_64.pkg.tar.xz",
    "PACAUR_VERSION=4.7.90-1",
    "PACAUR_PATH=pacaur/pacaur-4.7.90-1-any.pkg.tar.xz",
    "COWER_VERSION=18-1",
    "COWER_PATH=cower/cower-18-1-x86_64.pkg.tar.xz",
    "S3_ACCESS_KEY",
    "S3_SECRET_KEY",
    "S3_ENDPOINT=sfo2.digitaloceanspaces.com",
    "S3_BUCKET=codesink-cache",
    "S3_ENABLED=false",
    "DOCKER_USER",
    "DOCKER_PASS",
    "VAULT_ADDR",
    "VAULT_TOKEN",
    "GITHUB_TOKEN"
]

vault {
    address = "${environ.VAULT_ADDR}"
    token = "${environ.VAULT_TOKEN}"
}

cache {
    s3 {
        access_key = "${environ.S3_ACCESS_KEY}"
        secret_key = "${environ.S3_SECRET_KEY}"
        endpoint = "${environ.S3_ENDPOINT}"
        bucket = "${environ.S3_BUCKET}"
        disabled = "${environ.S3_ENABLED != "true"}"
    }
}

template "default" {
    image = "justinbarrick/arch-builder:builder"
    shell = "makepkg -s -f --noconfirm"
}

job "builder" {
    image = "justinbarrick/kaniko:latest"

    env = {
        "DOCKER_USER" = "${environ.DOCKER_USER}",
        "DOCKER_PASS" = "${environ.DOCKER_PASS}",
    }

    inputs = ["builder/Dockerfile"]

    shell = <<EOF
kaniko --dockerfile=builder/Dockerfile --context=/build/builder/ \
    --destination=${environ.DOCKER_USER}/arch-builder:builder
EOF
}

job "polybar" {
    deps = ["builder"]

    inputs = ["polybar/PKGBUILD", "polybar/polybar.install"]
    outputs = ["${environ.POLYBAR_PATH}"]

    workdir = "polybar"
}

job "cower" {
    deps = ["builder"]

    inputs = ["cower/PKGBUILD"]
    outputs = ["${environ.COWER_PATH}"]

    workdir = "cower"
}

job "pacaur" {
    deps = ["builder", "cower"]

    inputs = ["pacaur/PKGBUILD", "${environ.COWER_PATH}"]
    outputs = ["${environ.PACAUR_PATH}"]

    workdir = "pacaur"

    shell = "sudo pacman -U --noconfirm ../${environ.COWER_PATH} && makepkg -f -s --noconfirm"
}

job "repo" {
    deps = ["polybar", "cower", "pacaur"]

    inputs = ["${environ.POLYBAR_PATH}"]
    outputs = [
        "repo/polybar-${environ.POLYBAR_VERSION}-x86_64.pkg.tar.xz",
        "repo/cower-${environ.COWER_VERSION}-x86_64.pkg.tar.xz",
        "repo/pacaur-${environ.PACAUR_VERSION}-any.pkg.tar.xz",
        "repo/usr.db",
        "repo/usr.db.tar.gz",
        "repo/usr.files",
        "repo/usr.files.tar.gz"
    ]

    shell = <<EOF
rm -rf repo/
mkdir repo/
cp ${environ.POLYBAR_PATH} repo/
cp ${environ.COWER_PATH} repo/
cp ${environ.PACAUR_PATH} repo/
cd repo/
repo-add usr.db.tar.gz polybar-${environ.POLYBAR_VERSION}-x86_64.pkg.tar.xz
repo-add usr.db.tar.gz cower-${environ.COWER_VERSION}-x86_64.pkg.tar.xz
repo-add usr.db.tar.gz pacaur-${environ.PACAUR_VERSION}-any.pkg.tar.xz
EOF
}

job "release" {
    deps = ["repo"]

    image = "minio/mc:RELEASE.2018-12-27T00-37-49Z"

    inputs = [
        "repo/polybar-${environ.POLYBAR_VERSION}-x86_64.pkg.tar.xz",
        "repo/cower-${environ.COWER_VERSION}-x86_64.pkg.tar.xz",
        "repo/pacaur-${environ.PACAUR_VERSION}-any.pkg.tar.xz",
        "repo/usr.db",
        "repo/usr.db.tar.gz",
        "repo/usr.files",
        "repo/usr.files.tar.gz"
    ]

    env = {
        "MC_HOSTS_codesink" = "https://${environ.S3_ACCESS_KEY}:${environ.S3_SECRET_KEY}@${environ.S3_ENDPOINT}"
    }

    shell = <<EOF
mc mb codesink/codesink-arch
mc cp --recursive repo/ codesink/codesink-arch/
EOF
}
